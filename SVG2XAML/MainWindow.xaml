<mah:MetroWindow x:Class="Svg2Xaml.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls"
        xmlns:avalonedit="http://icsharpcode.net/sharpdevelop/avalonedit"
        xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
        Title="SVG to XAML Converter" 
        Height="650" Width="1000"
        Background="{DynamicResource MahApps.Brushes.ThemeBackground}"
        WindowStartupLocation="CenterScreen"
        TitleCharacterCasing="Normal"
        TitleAlignment="Left"
        TitleBarHeight="32"
        WindowTitleBrush="{DynamicResource MahApps.Brushes.ThemeBackground}"
        NonActiveWindowTitleBrush="{DynamicResource MahApps.Brushes.ThemeBackground}"
        TitleForeground="{DynamicResource MahApps.Brushes.ThemeForeground}"
        GlowBrush="{DynamicResource MahApps.Brushes.Accent}"
        ShowTitleBar="True"
        ShowSystemMenuOnRightClick="True">
    
    <mah:MetroWindow.Resources>
        <!-- 窗口按钮基础样式 -->
        <Style x:Key="ModernWindowButtonStyle" TargetType="Button">
            <Setter Property="Width" Value="46"/>
            <Setter Property="Height" Value="32"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.ThemeForeground}"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="FontSize" Value="10"/>
            <Setter Property="FontFamily" Value="Segoe MDL2 Assets"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="border" Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="Center" 
                                            VerticalAlignment="Center"
                                            TextElement.Foreground="{TemplateBinding Foreground}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.Gray3}"/>
                                <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.ThemeForeground}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.Gray7}"/>
                                <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.ThemeForeground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- 关闭按钮样式 -->
        <Style x:Key="ModernCloseButtonStyle" TargetType="Button" BasedOn="{StaticResource ModernWindowButtonStyle}">
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#E81123"/>
                    <Setter Property="Foreground" Value="White"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" Value="#8E0914"/>
                    <Setter Property="Foreground" Value="White"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!-- 功能按钮基础样式 -->
        <Style x:Key="FunctionButtonBaseStyle" TargetType="ButtonBase">
            <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.ThemeForeground}"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Padding" Value="10,5"/>
        </Style>

        <!-- 普通按钮样式 -->
        <Style x:Key="FunctionButtonStyle" TargetType="Button" BasedOn="{StaticResource FunctionButtonBaseStyle}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="border" 
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}">
                            <ContentPresenter x:Name="contentPresenter"
                                            HorizontalAlignment="Center"
                                            VerticalAlignment="Center"
                                            Margin="{TemplateBinding Padding}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Foreground" Value="{DynamicResource PrimaryBrush}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Foreground" Value="{DynamicResource SecondaryBrush}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- 切换按钮样式 -->
        <Style x:Key="FunctionToggleButtonStyle" TargetType="ToggleButton" BasedOn="{StaticResource FunctionButtonBaseStyle}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ToggleButton">
                        <Border x:Name="border" 
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}">
                            <ContentPresenter x:Name="contentPresenter"
                                            HorizontalAlignment="Center"
                                            VerticalAlignment="Center"
                                            Margin="{TemplateBinding Padding}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Foreground" Value="{DynamicResource PrimaryBrush}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Foreground" Value="{DynamicResource SecondaryBrush}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </mah:MetroWindow.Resources>

    <mah:MetroWindow.WindowButtonCommands>
        <mah:WindowButtonCommands>
            <mah:WindowButtonCommands.Template>
                <ControlTemplate TargetType="{x:Type mah:WindowButtonCommands}">
                    <StackPanel Orientation="Horizontal">
                        <Button x:Name="MinButton" 
                                Style="{StaticResource ModernWindowButtonStyle}"
                                Content="&#xE949;"
                                Click="MinButton_Click"/>
                        <Button x:Name="MaxButton"
                                Style="{StaticResource ModernWindowButtonStyle}"
                                Content="&#xE739;"
                                Click="MaxButton_Click"/>
                        <Button x:Name="CloseButton"
                                Style="{StaticResource ModernCloseButtonStyle}"
                                Content="&#xE106;"
                                Click="CloseButton_Click"/>
                    </StackPanel>
                </ControlTemplate>
            </mah:WindowButtonCommands.Template>
        </mah:WindowButtonCommands>
    </mah:MetroWindow.WindowButtonCommands>

    <mah:MetroWindow.RightWindowCommands>
        <mah:WindowCommands>
            <Button x:Name="btnOpenSvg" 
                    Style="{StaticResource FunctionButtonStyle}"
                    Click="btnOpenSvg_Click"
                    ToolTip="打开 SVG 文件">
                <StackPanel Orientation="Horizontal">
                    <Path Data="M19,4H14.82L13,2H7L5.18,4H1V18H23V4H19M21,16H3V6H6.82L8.64,4H13.36L15.18,6H21V16Z" 
                          Fill="{Binding Foreground, RelativeSource={RelativeSource AncestorType=Button}}"
                          Width="16" Height="16"
                          Stretch="Uniform"
                          Margin="0,0,4,0"/>
                    <TextBlock Text="打开" VerticalAlignment="Center"/>
                </StackPanel>
            </Button>
            <ToggleButton x:Name="btnTheme"
                         Style="{StaticResource FunctionToggleButtonStyle}"
                         Click="btnTheme_Click"
                         ToolTip="切换深色/浅色主题">
                <Grid>
                    <!-- 月亮图标 -->
                    <Path x:Name="MoonIcon"
                          Data="M12,3C7.03,3 3,7.03 3,12C3,16.97 7.03,21 12,21C16.97,21 21,16.97 21,12C21,11.54 20.96,11.08 20.9,10.64C19.92,12.01 18.32,12.9 16.5,12.9C13.52,12.9 11.1,10.48 11.1,7.5C11.1,5.69 11.99,4.08 13.36,3.1C12.92,3.04 12.46,3 12,3Z"
                          Fill="{Binding Foreground, RelativeSource={RelativeSource AncestorType=ToggleButton}}"
                          Width="16" Height="16"
                          Stretch="Uniform">
                        <Path.Style>
                            <Style TargetType="Path">
                                <Setter Property="Visibility" Value="Collapsed"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsChecked, RelativeSource={RelativeSource AncestorType=ToggleButton}}" Value="True">
                                        <Setter Property="Visibility" Value="Visible"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Path.Style>
                    </Path>
                    
                    <!-- 太阳图标 -->
                    <Path x:Name="SunIcon"
                          Data="M12,7A5,5 0 0,1 17,12A5,5 0 0,1 12,17A5,5 0 0,1 7,12A5,5 0 0,1 12,7M12,9A3,3 0 0,0 9,12A3,3 0 0,0 12,15A3,3 0 0,0 15,12A3,3 0 0,0 12,9M12,2L14.39,5.42C13.65,5.15 12.84,5 12,5C11.16,5 10.35,5.15 9.61,5.42L12,2M3.34,7L7.5,6.65C6.9,7.16 6.36,7.78 5.94,8.5C5.5,9.24 5.25,10 5.11,10.79L3.34,7M3.36,17L5.12,13.23C5.26,14 5.53,14.78 5.95,15.5C6.37,16.24 6.91,16.86 7.5,17.37L3.36,17M20.65,7L18.88,10.79C18.74,10 18.47,9.23 18.05,8.5C17.63,7.78 17.1,7.15 16.5,6.64L20.65,7M20.64,17L16.5,17.36C17.09,16.85 17.62,16.22 18.04,15.5C18.46,14.77 18.73,14 18.87,13.21L20.64,17M12,22L9.59,18.56C10.33,18.83 11.14,19 12,19C12.82,19 13.63,18.83 14.37,18.56L12,22Z"
                          Fill="{Binding Foreground, RelativeSource={RelativeSource AncestorType=ToggleButton}}"
                          Width="16" Height="16"
                          Stretch="Uniform">
                        <Path.Style>
                            <Style TargetType="Path">
                                <Setter Property="Visibility" Value="Visible"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsChecked, RelativeSource={RelativeSource AncestorType=ToggleButton}}" Value="True">
                                        <Setter Property="Visibility" Value="Collapsed"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Path.Style>
                    </Path>
                </Grid>
            </ToggleButton>
        </mah:WindowCommands>
    </mah:MetroWindow.RightWindowCommands>

    <Grid Margin="20">
        <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <!-- 主内容区 -->
        <Grid Grid.Row="0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>

            <!-- 预览区 -->
            <GroupBox Grid.Column="0" 
                         Header="SVG 预览"
                         Margin="0,0,10,0">
                <Image x:Name="svgPreview" 
                       Stretch="Uniform"
                       Margin="10"/>
            </GroupBox>

            <!-- XAML输出区 -->
            <GroupBox Grid.Column="1" 
                         Header="XAML 输出"
                         Margin="10,0,0,0">
                <avalonedit:TextEditor
                    x:Name="xamlOutput"
                    Margin="10"
                    FontFamily="Consolas"
                    SyntaxHighlighting="XML"
                    ShowLineNumbers="True"
                    WordWrap="True"
                    Background="{DynamicResource MahApps.Brushes.ThemeBackground}"
                    Foreground="{DynamicResource MahApps.Brushes.ThemeForeground}"
                    HorizontalScrollBarVisibility="Auto"
                    VerticalScrollBarVisibility="Auto">
                    <avalonedit:TextEditor.Options>
                        <avalonedit:TextEditorOptions 
                            ShowSpaces="False"
                            ShowTabs="False"
                            ShowEndOfLine="False"
                            EnableHyperlinks="True"
                            EnableEmailHyperlinks="True"
                            IndentationSize="4"
                            ConvertTabsToSpaces="True"/>
                    </avalonedit:TextEditor.Options>
                </avalonedit:TextEditor>
            </GroupBox>
        </Grid>
    </Grid>
</mah:MetroWindow>